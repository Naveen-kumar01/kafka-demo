[2023-01-30 19:00:27,593] INFO [BrokerChangeListener on Controller 0]: Broker change listener fired for path /brokers/ids with children 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2023-01-30 19:00:27,618] INFO [BrokerChangeListener on Controller 0]: Newly added brokers: 2, deleted brokers: , all live brokers: 0,1,2 (kafka.controller.ReplicaStateMachine$BrokerChangeListener)
[2023-01-30 19:00:27,618] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-01-30 19:00:27,621] INFO [Controller 0]: New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-01-30 19:00:27,622] INFO [Controller-0-to-broker-2-send-thread], Starting  (kafka.controller.RequestSendThread)
[2023-01-30 19:00:27,625] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-01-30 19:01:59,172] DEBUG [TopicChangeListener on Controller 0]: Topic change listener fired for path /brokers/topics with children test (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2023-01-30 19:01:59,177] INFO [TopicChangeListener on Controller 0]: New topics: [Set(test)], deleted topics: [Set()], new partition replica assignment [Map([test,0] -> List(2, 0))] (kafka.controller.PartitionStateMachine$TopicChangeListener)
[2023-01-30 19:01:59,178] INFO [Controller 0]: New topic creation callback for [test,0] (kafka.controller.KafkaController)
[2023-01-30 19:01:59,182] INFO [Controller 0]: New partition creation callback for [test,0] (kafka.controller.KafkaController)
[2023-01-30 19:01:59,183] INFO [Partition state machine on Controller 0]: Invoking state change to NewPartition for partitions [test,0] (kafka.controller.PartitionStateMachine)
[2023-01-30 19:01:59,189] INFO [Replica state machine on controller 0]: Invoking state change to NewReplica for replicas [Topic=test,Partition=0,Replica=2],[Topic=test,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2023-01-30 19:01:59,196] INFO [Partition state machine on Controller 0]: Invoking state change to OnlinePartition for partitions [test,0] (kafka.controller.PartitionStateMachine)
[2023-01-30 19:01:59,198] DEBUG [Partition state machine on Controller 0]: Live assigned replicas for partition [test,0] are: [List(2, 0)] (kafka.controller.PartitionStateMachine)
[2023-01-30 19:01:59,199] DEBUG [Partition state machine on Controller 0]: Initializing leader and isr for partition [test,0] to (Leader:2,ISR:2,0,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.PartitionStateMachine)
[2023-01-30 19:01:59,222] INFO [Replica state machine on controller 0]: Invoking state change to OnlineReplica for replicas [Topic=test,Partition=0,Replica=2],[Topic=test,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2023-01-30 19:03:55,153] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2023-01-30 19:03:55,154] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([test,0] -> List(2, 0))) (kafka.controller.KafkaController)
[2023-01-30 19:03:55,158] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2023-01-30 19:03:55,160] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2023-01-30 19:08:55,153] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2023-01-30 19:08:55,154] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([test,0] -> List(2, 0))) (kafka.controller.KafkaController)
[2023-01-30 19:08:55,154] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2023-01-30 19:08:55,154] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2023-01-30 19:13:55,153] TRACE [Controller 0]: checking need to trigger partition rebalance (kafka.controller.KafkaController)
[2023-01-30 19:13:55,154] DEBUG [Controller 0]: preferred replicas by broker Map(2 -> Map([test,0] -> List(2, 0))) (kafka.controller.KafkaController)
[2023-01-30 19:13:55,154] DEBUG [Controller 0]: topics not in preferred replica Map() (kafka.controller.KafkaController)
[2023-01-30 19:13:55,154] TRACE [Controller 0]: leader imbalance ratio for broker 2 is 0.000000 (kafka.controller.KafkaController)
[2023-01-30 19:15:14,141] INFO [Controller 0]: Shutting down broker 0 (kafka.controller.KafkaController)
[2023-01-30 19:15:14,142] DEBUG [Controller 0]: All shutting down brokers: 0 (kafka.controller.KafkaController)
[2023-01-30 19:15:14,143] DEBUG [Controller 0]: Live brokers: 1,2 (kafka.controller.KafkaController)
[2023-01-30 19:15:14,152] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2023-01-30 19:15:14,152] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=test,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2023-01-30 19:15:14,153] INFO [Replica state machine on controller 0]: Invoking state change to OfflineReplica for replicas [Topic=test,Partition=0,Replica=0] (kafka.controller.ReplicaStateMachine)
[2023-01-30 19:15:14,153] DEBUG [Controller 0]: Removing replica 0 from ISR 2,0 for partition [test,0]. (kafka.controller.KafkaController)
[2023-01-30 19:15:14,158] WARN [Controller-0-to-broker-0-send-thread], Controller 0 epoch 1 fails to send request {controller_id=0,controller_epoch=1,delete_partitions=0,partitions=[{topic=test,partition=0}]} to broker localhost:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$2(NetworkClientBlockingOps.scala:137)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollContinuously$extension(NetworkClientBlockingOps.scala:143)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:189)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:180)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2023-01-30 19:15:14,165] INFO [Controller 0]: New leader and ISR for partition [test,0] is {"leader":2,"leader_epoch":1,"isr":[2]} (kafka.controller.KafkaController)
[2023-01-30 19:15:14,169] WARN [Controller-0-to-broker-2-send-thread], Controller 0 epoch 1 fails to send request {controller_id=0,controller_epoch=1,partition_states=[{topic=test,partition=0,controller_epoch=1,leader=2,leader_epoch=1,isr=[2],zk_version=1,replicas=[2,0]}],live_leaders=[{id=2,host=localhost,port=9094}]} to broker localhost:9094 (id: 2 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 2 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$2(NetworkClientBlockingOps.scala:137)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollContinuously$extension(NetworkClientBlockingOps.scala:143)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:189)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:180)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2023-01-30 19:15:14,169] WARN [Controller-0-to-broker-1-send-thread], Controller 0 epoch 1 fails to send request {controller_id=0,controller_epoch=1,partition_states=[{topic=test,partition=0,controller_epoch=1,leader=2,leader_epoch=1,isr=[2],zk_version=1,replicas=[2,0]}],live_brokers=[{id=0,end_points=[{port=9092,host=localhost,security_protocol_type=0}],rack=null},{id=1,end_points=[{port=9093,host=localhost,security_protocol_type=0}],rack=null},{id=2,end_points=[{port=9094,host=localhost,security_protocol_type=0}],rack=null}]} to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:87)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1$$anonfun$apply$1.apply(NetworkClientBlockingOps.scala:84)
	at scala.Option.foreach(Option.scala:257)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:84)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingSendAndReceive$extension$1.apply(NetworkClientBlockingOps.scala:80)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$2(NetworkClientBlockingOps.scala:137)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollContinuously$extension(NetworkClientBlockingOps.scala:143)
	at kafka.utils.NetworkClientBlockingOps$.blockingSendAndReceive$extension(NetworkClientBlockingOps.scala:80)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:189)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:180)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2023-01-30 19:15:14,169] DEBUG The stop replica request (delete = true) sent to broker 0 is  (kafka.controller.ControllerBrokerRequestBatch)
[2023-01-30 19:15:14,171] DEBUG The stop replica request (delete = false) sent to broker 0 is [Topic=test,Partition=0,Replica=0] (kafka.controller.ControllerBrokerRequestBatch)
[2023-01-30 19:15:14,171] TRACE [Controller 0]: All leaders = [test,0] -> (Leader:2,ISR:2,LeaderEpoch:1,ControllerEpoch:1) (kafka.controller.KafkaController)
[2023-01-30 19:15:14,468] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$2.apply(NetworkClientBlockingOps.scala:63)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$2.apply(NetworkClientBlockingOps.scala:59)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$1(NetworkClientBlockingOps.scala:112)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:120)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:59)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:181)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:180)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2023-01-30 19:15:14,471] INFO [Controller-0-to-broker-2-send-thread], Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-01-30 19:15:14,472] INFO [Controller-0-to-broker-1-send-thread], Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-01-30 19:15:14,771] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$2.apply(NetworkClientBlockingOps.scala:63)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$2.apply(NetworkClientBlockingOps.scala:59)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$1(NetworkClientBlockingOps.scala:112)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:120)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:59)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:181)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:180)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2023-01-30 19:15:15,073] WARN [Controller-0-to-broker-0-send-thread], Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$2.apply(NetworkClientBlockingOps.scala:63)
	at kafka.utils.NetworkClientBlockingOps$$anonfun$blockingReady$extension$2.apply(NetworkClientBlockingOps.scala:59)
	at kafka.utils.NetworkClientBlockingOps$.recursivePoll$1(NetworkClientBlockingOps.scala:112)
	at kafka.utils.NetworkClientBlockingOps$.kafka$utils$NetworkClientBlockingOps$$pollUntil$extension(NetworkClientBlockingOps.scala:120)
	at kafka.utils.NetworkClientBlockingOps$.blockingReady$extension(NetworkClientBlockingOps.scala:59)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:232)
	at kafka.controller.RequestSendThread.liftedTree1$1(ControllerChannelManager.scala:181)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:180)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:63)
[2023-01-30 19:15:15,314] DEBUG [Controller 0]: Controller resigning, broker id 0 (kafka.controller.KafkaController)
[2023-01-30 19:15:15,315] DEBUG [Controller 0]: De-registering IsrChangeNotificationListener (kafka.controller.KafkaController)
[2023-01-30 19:15:15,319] INFO [Partition state machine on Controller 0]: Stopped partition state machine (kafka.controller.PartitionStateMachine)
[2023-01-30 19:15:15,319] INFO [Replica state machine on controller 0]: Stopped replica state machine (kafka.controller.ReplicaStateMachine)
[2023-01-30 19:15:15,323] INFO [Controller-0-to-broker-2-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,324] INFO [Controller-0-to-broker-2-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,324] INFO [Controller-0-to-broker-2-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,327] INFO [Controller-0-to-broker-1-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,327] INFO [Controller-0-to-broker-1-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,328] INFO [Controller-0-to-broker-1-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,329] INFO [Controller-0-to-broker-0-send-thread], Shutting down (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,329] INFO [Controller-0-to-broker-0-send-thread], Shutdown completed (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,329] INFO [Controller-0-to-broker-0-send-thread], Stopped  (kafka.controller.RequestSendThread)
[2023-01-30 19:15:15,329] INFO [Controller 0]: Broker 0 resigned as the controller (kafka.controller.KafkaController)
